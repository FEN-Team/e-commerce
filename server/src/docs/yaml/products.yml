paths:   
  /products:
    get:
      summary: Returns a list of products + total items.
      tags:
        - products
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: category of products   
      responses:
        "200":
          description: A list of products + total items
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  lastPage:
                    type: number
                    example: 2         
                  totalItems:
                    type: number
                    example: 15      
                              
  /products/{productId}:
    get:
      summary: Returns a single product.
      tags:
        - products 
      parameters:
        - in: path
          name: productId
          type: string
          required: true
          schema:
            type: string
            example: 650b1ed61882fc118a114d19
          description: The product ID
      responses:
        "200":
          description: returns a single product with its description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: returns an error with "invalid value in request body" message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: returns an error with "Product Not Found!" message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"